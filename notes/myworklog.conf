server {
	listen   80 default_server;
	# listen [::]:80 default_server deferred;
	return   444;
}

map $http_connection $connection_upgrade {
	"~*Upgrade" $http_connection;
	default keep-alive;
}

server {
	server_name   api.myworklog.ir;
	location / {
		proxy_pass         http://127.0.0.1:5000/;
		proxy_http_version 1.1;
		proxy_set_header   Upgrade $http_upgrade;
		proxy_set_header   Connection $connection_upgrade;
		proxy_set_header   Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Proto $scheme;
	}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.myworklog.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.myworklog.ir/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
	server_name app.myworklog.ir;
	root /var/www/myworklog/client-dashboard;
	index index.html;

	location / {
      		try_files $uri $uri/ /index.html =404;
    	}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.myworklog.ir/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.myworklog.ir/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = api.myworklog.ir) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen        80;
	server_name   api.myworklog.ir;
    return 404; # managed by Certbot


}


server {
    if ($host = app.myworklog.ir) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80;
	server_name app.myworklog.ir;
    return 404; # managed by Certbot


}

